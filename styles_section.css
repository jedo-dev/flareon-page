.section-1 {
  background: linear-gradient(180deg, rgba(14, 27, 33, 1) 0%, rgba(16, 41, 48, 1) 100%);
  position: relative; /* Добавляем для позиционирования звезд */
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100dvh; /* Или нужная вам высота */
}

.card {
  position: relative; /* Чтобы карточка была над звездами */
  z-index: 10; /* Убедимся, что карточка выше звезд */
  text-align: center;
  flex-direction: column;
  padding: 20px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  align-content: center;
  justify-content: center;
  min-height: 100dvh; /* Чтобы было место для .main-guy */
  overflow: hidden; /* Чтобы не было скролла из-за большого спрайта */
  width: 100dvw;
  @media (max-width: 768px) {
    gap: 40px;
    flex-direction: column;
    align-content: flex-start;
  }

  @media (max-width: 480px) {
  }
}
.stars {
  width: 40px;
  position: absolute;
  opacity: 0.8;
  fill: #d0c896;
  /* z-index: 500; */
  width: calc(20px + (var(--star-size, 0) * 10px));
  height: calc(20px + (var(--star-size, 0) * 10px));
  animation: twinkle var(--twinkle-duration, 2s) infinite alternate;
  animation-delay: var(--twinkle-delay, 0s);
  animation-timing-function: ease-in-out;
}

@keyframes twinkle {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 1;
  }
}
.star-list {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  /* z-index: 1; */
}
.section-2 {
  background: linear-gradient(180deg, rgba(16, 41, 48, 1) 0%, rgb(16 42 51) 100%);

  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  min-height: 100dvh; /* Или нужная вам высота */
}
.section-3 {
  background: linear-gradient(180deg, rgb(16 42 51) 0%, rgb(19 50 60) 100%);
}
.wrapper-contact {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  height: inherit;
  align-items: center;
  position: relative;
}

.text-test {
  font-family: 'Besom-cyr';
}

.character-vertical {
  background-image: url('./images/character-vertical.png');
  width: 636px;
  height: 162px;
  margin: 0 auto;
  animation: character-vertical-animation 0.4s steps(2, end) infinite;
  @media (max-width: 480px) {
    transform: scale(0.4);
  }
}
@keyframes character-vertical-animation {
  from {
    background-position: 0px;
  }
  to {
    background-position: -1272px;
  }
}
.main-guy {
  background-image: url('./main-guy.png');
  width: 950px;
  height: 1500px;

  /* Позиционирование в правом нижнем углу СЕКЦИИ */
  position: absolute;
  right: 5%;
  bottom: 25%;
  z-index: 5; /* Между фоном и карточкой */

  /* Масштабирование */
  transform: scale(0.3);
  transform-origin: right bottom;

  /* Анимация */
  animation: wink 0.6s steps(4, end) infinite;

  /* Адаптивность */
  @media (max-width: 768px) {
    transform: scale(0.25);
  }

  @media (max-width: 480px) {
    transform: scale(0.4);
    right: 0px;
    bottom: -100px;
  }
}

@keyframes wink {
  from {
    background-position: 0px;
  }
  to {
    background-position: -3800px;
  }
}

.text,
.text-2 {
  display: inline-block; /* Для transform */
}
.horizontal-tabs {
  padding: 20px;
  scrollbar-width: thin; /* Тонкий скроллбар */
  scrollbar-color: #973faf transparent; /* Цвет скроллбара */
  @media (max-width: 480px) {
    min-height: 60dvh;
    transform: translateY(-5%);
  }
  /* Стилизация скроллбара для WebKit */
  &::-webkit-scrollbar {
    width: 6px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: #973faf;
    background: url('./scroll-planet.png');
    border-radius: 3px;
  }
}

.vertical-tab {
  scroll-snap-align: start;
  display: flex;
  flex-direction: column;
  margin-bottom: 30px;
  min-height: 300px;
  background: rgba(16, 41, 48, 0.8);
  border-radius: 10px;
  padding: 15px;
  max-width: 550px;
  transition: transform 0.3s ease;
  @media (max-width: 480px) {
    flex-direction: column;
    min-height: 60dvh;
  }
  &:hover {
    transform: translateX(-10px);
  }
  .tabs-image {
    width: 400px;
    height: auto;
    object-fit: cover;
    border-radius: 5px;
    aspect-ratio: 16 / 9;
    margin: 0 auto;
    @media (max-width: 480px) {
      width: 80vw;
    }
  }

  .logo {
    height: 50px;
    aspect-ratio: none;

    width: auto;
  }
}

.vertical-tab-wrapper-text {
  margin-left: 15px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-family: 'BellotaText';
  color: #ffffff;
  flex: 1;
}

.vertical-tab-title {
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 10px;
  color: #d0c896;
}

.vertical-tab-text {
  font-size: 0.9rem;
  line-height: 1.4;
}
.title {
  text-align: center;
}
divider {
  width: 100%;
  height: 3px;
  background-color: #d0c896;
  margin: 10px 0;
}
.vertical-tav-techno {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  width: fit-content;
}
.vertical-tav-techno-wrapper {
  display: flex;
  gap: 10px;
}
/* Основной контейнер для горизонтального скролла */
.horizontal-tabs-container {
  width: 100vw;
  overflow-x: hidden;
  position: relative;
  padding: 20px;
}

/* Стили для горизонтального скролла */
.horizontal-tabs {
  display: flex;
  gap: 20px;
  padding: 0 5vw; /* Отступы по бокам */
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch; /* Для плавности на iOS */

  /* Скрываем стандартный скроллбар */
}

/* Стили для отдельных карточек */
.horizontal-tab {
  scroll-snap-align: start;
  flex: 0 0 auto;
  width: 80vw; /* На мобильных - одна карточка */
  min-width: 300px; /* Минимальная ширина */
  max-width: 400px; /* Максимальная ширина */
  background: rgba(16, 41, 48, 0.8);
  border-radius: 10px;
  padding: 15px;
  transition: transform 0.3s ease;
  margin-bottom: 20px; /* Отступ снизу */

  /* На десктопах показываем несколько карточек */
  @media (min-width: 768px) {
    width: 45vw;
  }

  @media (min-width: 1024px) {
    width: 30vw;
  }

  &:hover {
    transform: translateY(-10px); /* Эффект при наведении */
  }

  /* Остальные стили карточки оставляем как были */
}

.last-img-wrapper {
  width: 100%;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.last-img {
  position: relative;
  z-index: 2;
  background-image: url('./images/last-img.png');
  background-repeat: no-repeat;
  background-position: 0 0;
  background-size: 2880px 660px;
  background-color: transparent;

  width: 1440px;
  height: 660px;
  zoom: 0.8;
  animation: last-frame-animation 0.5s steps(2, end) infinite;
}
@keyframes last-frame-animation {
  from {
    background-position: 0 0;
  }
  to {
    background-position: -2880px 0;
  }
}

/* Масштабируем через zoom */
@media (max-width: 1200px) {
  .last-img {
    zoom: 0.7;
  }
}

@media (max-width: 900px) {
  .last-img {
    zoom: 0.6;
  }
}

@media (max-width: 600px) {
  .star-layer,
  .last-img {
    zoom: 0.3;
  }
}

@media (max-width: 400px) {
  .last-img {
    zoom: 0.35;
  }
}

.star-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('./images/stars-bg.png');
  background-repeat: repeat-x;
  background-size: auto 100%; /* Автоматическая ширина, полная высота */
  animation: move-stars 10s linear infinite;
  pointer-events: none; /* чтобы клик сквозь */
  z-index: 1; /* поднимай при необходимости */
}

@keyframes move-stars {
  from {
    background-position: 0 0;
  }
  to {
    background-position: -3000px 0;
  }
}

.planet-container {
  position: relative;
  width: 300px;
  height: 300px;
  display: flex;
}

.planet-img {
  width: 50%;
  height: 50%;
  margin: auto;
  object-fit: contain;
    animation: rotateReverse 20s linear infinite;
}

.circular-text {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  animation: rotate 20s linear infinite;
  pointer-events: none; /* Чтобы клики проходили сквозь SVG к изображению */
}

.circular-text text {
  font-size: 12px;
  font-weight: bold;

  fill: #d0c896;
  font-family: 'BellotaText';
}
@keyframes rotateReverse {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(-360deg);
  }
}
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
